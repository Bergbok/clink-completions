------------------------------------------------------------------------------
-- RG

local function try_require(module)
    local r
    pcall(function() r = require(module) end)
    return r
end

try_require("arghelper")

local rg_sortr = clink.argmatcher():addarg({"path", "modified", "accessed", "created", "none"})
local rg_sort = clink.argmatcher():addarg({"path", "modified", "accessed", "created", "none"})
local rg_engine = clink.argmatcher():addarg({"default", "pcre2", "auto"})
local rg_color = clink.argmatcher():addarg({"never", "auto", "always", "ansi"})

clink.argmatcher("rg")
:adddescriptions({
  ["-u"] = { "Reduce the level of "smart" searching." },
  ["-g"] = { "Include or exclude files." },
  ["--before-context"] = { "Show NUM lines before each match." },
  ["-m"] = { "Limit the number of matches." },
  ["--crlf"] = { "Support CRLF line terminators (useful on Windows)." },
  ["--max-columns-preview"] = { "Print a preview for lines exceeding the limit." },
  ["--max-columns"] = { "Don't print lines longer than this limit." },
  ["--auto-hybrid-regex"] = { "Dynamically use PCRE2 if necessary." },
  ["--no-unicode"] = { "Disable Unicode mode." },
  ["-0"] = { "Print a NUL byte after file paths." },
  ["-x"] = { "Only show matches surrounded by line boundaries." },
  ["-h"] = { "Prints help information. Use --help for more details." },
  ["-p"] = { "Alias for --color always --heading --line-number." },
  ["--pre"] = { "search outputs of COMMAND FILE for each FILE" },
  ["--colors"] = { "Configure color settings and styles." },
  ["--dfa-size-limit"] = { "The upper size limit of the regex DFA." },
  ["--max-filesize"] = { "Ignore files larger than NUM in size." },
  ["--case-sensitive"] = { "Search case sensitively (default)." },
  ["--pcre2-version"] = { "Print the version of PCRE2 that ripgrep uses." },
  ["--no-ignore-parent"] = { "Don't respect ignore files in parent directories." },
  ["--pre-glob"] = { "Include or exclude files from a preprocessing command." },
  ["-w"] = { "Only show matches surrounded by word boundaries." },
  ["-e"] = { "A pattern to search for." },
  ["--no-require-git"] = { "Do not require a git repository to use gitignores." },
  ["--follow"] = { "Follow symbolic links." },
  ["--files"] = { "Print each file that would be searched." },
  ["--only-matching"] = { "Print only matched parts of a line." },
  ["--line-buffered"] = { "Force line buffering." },
  ["--unrestricted"] = { "Reduce the level of "smart" searching." },
  ["-M"] = { "Don't print lines longer than this limit." },
  ["--invert-match"] = { "Invert matching." },
  ["--stats"] = { "Print statistics about this ripgrep search." },
  ["-U"] = { "Enable matching across multiple lines." },
  ["--count"] = { "Only show the count of matching lines for each file." },
  ["-E"] = { "Specify the text encoding of files to search." },
  ["--replace"] = { "Replace matches with the given text." },
  ["--threads"] = { "The approximate number of threads to use." },
  ["--regex-size-limit"] = { "The upper size limit of the compiled regex." },
  ["-f"] = { "Search for patterns from the given file." },
  ["-r"] = { "Replace matches with the given text." },
  ["-j"] = { "The approximate number of threads to use." },
  ["--engine"] = { " arg", "Specify which regexp engine to use." },
  ["--file"] = { "Search for patterns from the given file." },
  ["--type"] = { "Only search files matching TYPE." },
  ["--type-clear"] = { "Clear globs for a file type." },
  ["-V"] = { "Prints version information" },
  ["--no-pcre2-unicode"] = { "Disable Unicode mode for PCRE2 matching." },
  ["-z"] = { "Search in compressed files." },
  ["--block-buffered"] = { "Force block buffering." },
  ["--glob-case-insensitive"] = { "Process all glob patterns case insensitively." },
  ["--one-file-system"] = { "Do not descend into directories on other file systems." },
  ["-c"] = { "Only show the count of matching lines for each file." },
  ["--regexp"] = { "A pattern to search for." },
  ["-q"] = { "Do not print anything to stdout." },
  ["-i"] = { "Case insensitive search." },
  ["--version"] = { "Prints version information" },
  ["--type-not"] = { "Do not search files matching TYPE." },
  ["--debug"] = { "Show debug messages." },
  ["--glob"] = { "Include or exclude files." },
  ["--count-matches"] = { "Only show the count of individual matches for each file." },
  ["--no-config"] = { "Never read configuration files." },
  ["--smart-case"] = { "Smart case search." },
  ["--type-list"] = { "Show all supported file types." },
  ["--multiline-dotall"] = { "Make '.' match new lines when multiline is enabled." },
  ["-C"] = { "Show NUM lines before and after each match." },
  ["--line-number"] = { "Show line numbers." },
  ["--search-zip"] = { "Search in compressed files." },
  ["--json"] = { "Show search results in a JSON Lines format." },
  ["-S"] = { "Smart case search." },
  ["--context"] = { "Show NUM lines before and after each match." },
  ["-t"] = { "Only search files matching TYPE." },
  ["--no-filename"] = { "Never print the file path with the matched lines." },
  ["-l"] = { "Print the paths with at least one match." },
  ["--max-depth"] = { "Descend at most NUM directories." },
  ["--heading"] = { "Print matches grouped by each file." },
  ["--context-separator"] = { "Set the context separator string." },
  ["-L"] = { "Follow symbolic links." },
  ["--encoding"] = { "Specify the text encoding of files to search." },
  ["--pretty"] = { "Alias for --color always --heading --line-number." },
  ["--sortr"] = { " arg", "Sort results in descending order. Implies --threads=1." },
  ["-T"] = { "Do not search files matching TYPE." },
  ["-F"] = { "Treat the pattern as a literal string." },
  ["--null"] = { "Print a NUL byte after file paths." },
  ["--column"] = { "Show column numbers." },
  ["--fixed-strings"] = { "Treat the pattern as a literal string." },
  ["--iglob"] = { "Include or exclude files case insensitively." },
  ["-s"] = { "Search case sensitively (default)." },
  ["--line-regexp"] = { "Only show matches surrounded by line boundaries." },
  ["--no-heading"] = { "Don't group matches by each file." },
  ["--sort-files"] = { "DEPRECATED" },
  ["--mmap"] = { "Search using memory maps when possible." },
  ["--include-zero"] = { "Include files with zero matches in summary" },
  ["--help"] = { "Prints help information. Use --help for more details." },
  ["--word-regexp"] = { "Only show matches surrounded by word boundaries." },
  ["-I"] = { "Never print the file path with the matched lines." },
  ["--with-filename"] = { "Print the file path with the matched lines." },
  ["--no-ignore"] = { "Don't respect ignore files." },
  ["-H"] = { "Print the file path with the matched lines." },
  ["--vimgrep"] = { "Show results in vim compatible format." },
  ["--trim"] = { "Trim prefixed whitespace from matches." },
  ["--files-with-matches"] = { "Print the paths with at least one match." },
  ["-a"] = { "Search binary files as if they were text." },
  ["--multiline"] = { "Enable matching across multiple lines." },
  ["--field-context-separator"] = { "Set the field context separator." },
  ["-A"] = { "Show NUM lines after each match." },
  ["--max-count"] = { "Limit the number of matches." },
  ["--color"] = { " arg", "Controls when to use color." },
  ["--no-ignore-exclude"] = { "Don't respect local exclusion files." },
  ["--quiet"] = { "Do not print anything to stdout." },
  ["--binary"] = { "Search binary files." },
  ["-v"] = { "Invert matching." },
  ["-b"] = { "Print the 0-based byte offset for each matching line." },
  ["--passthru"] = { "Print both matching and non-matching lines." },
  ["--pcre2"] = { "Enable PCRE2 matching." },
  ["-P"] = { "Enable PCRE2 matching." },
  ["--no-messages"] = { "Suppress some error messages." },
  ["-o"] = { "Print only matched parts of a line." },
  ["--ignore-file"] = { "Specify additional ignore files." },
  ["--null-data"] = { "Use NUL as a line terminator instead of \n." },
  ["--no-ignore-vcs"] = { "Don't respect VCS ignore files." },
  ["-n"] = { "Show line numbers." },
  ["-B"] = { "Show NUM lines before each match." },
  ["--no-ignore-messages"] = { "Suppress gitignore parse error messages." },
  ["--no-ignore-global"] = { "Don't respect global ignore files." },
  ["--no-ignore-files"] = { "Don't respect --ignore-file arguments." },
  ["--path-separator"] = { "Set the path separator." },
  ["--sort"] = { " arg", "Sort results in ascending order. Implies --threads=1." },
  ["--text"] = { "Search binary files as if they were text." },
  ["--ignore-case"] = { "Case insensitive search." },
  ["--no-ignore-dot"] = { "Don't respect .ignore files." },
  ["--field-match-separator"] = { "Set the match separator." },
  ["--no-line-number"] = { "Suppress line numbers." },
  ["--after-context"] = { "Show NUM lines after each match." },
  ["--no-mmap"] = { "Never use memory maps." },
  ["-N"] = { "Suppress line numbers." },
  ["--hidden"] = { "Search hidden files and directories." },
  ["--ignore-file-case-insensitive"] = { "Process ignore files case insensitively." },
  ["--files-without-match"] = { "Print the paths that contain zero matches." },
  ["--type-add"] = { "Add a new glob for a file type." },
  ["-."] = { "Search hidden files and directories." },
  ["--byte-offset"] = { "Print the 0-based byte offset for each matching line." },
})
:addflags({
  "-A",
  "--after-context",
  "-B",
  "--before-context",
  "--color"..rg_color,
  "--colors",
  "-C",
  "--context",
  "--context-separator",
  "--dfa-size-limit",
  "-E",
  "--encoding",
  "--engine"..rg_engine,
  "--field-context-separator",
  "--field-match-separator",
  "-f",
  "--file",
  "-g",
  "--glob",
  "--iglob",
  "--ignore-file",
  "-M",
  "--max-columns",
  "-m",
  "--max-count",
  "--max-depth",
  "--max-filesize",
  "--path-separator",
  "--pre",
  "--pre-glob",
  "--regex-size-limit",
  "-e",
  "--regexp",
  "-r",
  "--replace",
  "--sort"..rg_sort,
  "--sortr"..rg_sortr,
  "-j",
  "--threads",
  "-t",
  "--type",
  "--type-add",
  "--type-clear",
  "-T",
  "--type-not",
  "--auto-hybrid-regex",
  "--no-auto-hybrid-regex",
  "--binary",
  "--no-binary",
  "--block-buffered",
  "--no-block-buffered",
  "-b",
  "--byte-offset",
  "-s",
  "--case-sensitive",
  "--column",
  "--no-column",
  "--no-context-separator",
  "-c",
  "--count",
  "--count-matches",
  "--crlf",
  "--no-crlf",
  "--debug",
  "--trace",
  "--no-encoding",
  "--files",
  "-l",
  "--files-with-matches",
  "--files-without-match",
  "-F",
  "--fixed-strings",
  "--no-fixed-strings",
  "-L",
  "--follow",
  "--no-follow",
  "--glob-case-insensitive",
  "--no-glob-case-insensitive",
  "--heading",
  "--no-heading",
  "-.",
  "--hidden",
  "--no-hidden",
  "-i",
  "--ignore-case",
  "--ignore-file-case-insensitive",
  "--no-ignore-file-case-insensitive",
  "--include-zero",
  "-v",
  "--invert-match",
  "--json",
  "--no-json",
  "--line-buffered",
  "--no-line-buffered",
  "-n",
  "--line-number",
  "-N",
  "--no-line-number",
  "-x",
  "--line-regexp",
  "--max-columns-preview",
  "--no-max-columns-preview",
  "--mmap",
  "--no-mmap",
  "-U",
  "--multiline",
  "--no-multiline",
  "--multiline-dotall",
  "--no-multiline-dotall",
  "--no-config",
  "--no-ignore",
  "--ignore",
  "--no-ignore-dot",
  "--ignore-dot",
  "--no-ignore-exclude",
  "--ignore-exclude",
  "--no-ignore-files",
  "--ignore-files",
  "--no-ignore-global",
  "--ignore-global",
  "--no-ignore-messages",
  "--ignore-messages",
  "--no-ignore-parent",
  "--ignore-parent",
  "--no-ignore-vcs",
  "--ignore-vcs",
  "--no-messages",
  "--messages",
  "--no-pcre2-unicode",
  "--pcre2-unicode",
  "--no-require-git",
  "--require-git",
  "--no-unicode",
  "--unicode",
  "-0",
  "--null",
  "--null-data",
  "--one-file-system",
  "--no-one-file-system",
  "-o",
  "--only-matching",
  "--passthru",
  "-P",
  "--pcre2",
  "--no-pcre2",
  "--pcre2-version",
  "--no-pre",
  "-p",
  "--pretty",
  "-q",
  "--quiet",
  "-z",
  "--search-zip",
  "--no-search-zip",
  "-S",
  "--smart-case",
  "--sort-files",
  "--no-sort-files",
  "--stats",
  "--no-stats",
  "-a",
  "--text",
  "--no-text",
  "--trim",
  "--no-trim",
  "--type-list",
  "-u",
  "--unrestricted",
  "--vimgrep",
  "-H",
  "--with-filename",
  "-I",
  "--no-filename",
  "-w",
  "--word-regexp",
  "-h",
  "--help",
  "-V",
  "--version",
})
